<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yapp.ios1.mapper.AlarmMapper">
    <insert id="insertFollowAlarmLog" parameterType="NotificationForOneDto"
            useGeneratedKeys="true" keyProperty="notification.alarmId">
        INSERT INTO follow_alarm_log (title, message, from_user_id, alarm_status, created_at, user_id)
        VALUES (#{notification.title}, #{notification.message}, #{fromUserId}, #{alarmStatus}, #{time}, #{friendId})
    </insert>

    <update id="updateFollowAlarmLog">
        UPDATE follow_alarm_log
        SET title = #{notification.title},
            message = #{notification.message}
        WHERE id = #{alarmId}
    </update>

    <insert id="insertWholeAlarmLog" parameterType="NotificationDto">
        INSERT INTO whole_alarm_log (title, message, alarm_status, created_at)
        VALUES (#{alarm.title}, #{alarm.message}, #{alarmStatus}, #{alarm.localDateTime})
    </insert>

    <select id="getCommonAlarmLog" resultType="Notification">
        SELECT id           as alarmId,
               title,
               message,
               alarm_status as alarmStatus,
               created_at   as createdAt
        FROM whole_alarm_log
        where id NOT IN (SELECT alarm_id FROM whole_alarm_delete WHERE user_id = #{userId})
        ORDER BY created_at ASC
    </select>

    <select id="getFollowAlarmLog" resultType="Notification">
        SELECT al.id as alarmId,
               al.from_user_id as friendId,
               message,
               u.nickname      as nickName,
               u.profile_url   as profileUrl,
               f.friend_status as friendStatus,
               alarm_status    as alarmStatus,
               created_at      as createdAt
        FROM follow_alarm_log al
            JOIN follow f
                ON f.alarm_id = al.id
            JOIN user u
                ON u.id = al.from_user_id
        WHERE al.user_id = #{userId}
        ORDER BY al.created_at ASC
    </select>

    <select id="findWholeAlarmByAlarmId" resultType="Notification">
        SELECT id as alarmId
        FROM whole_alarm_log
        WHERE id = #{alarmId}
    </select>

    <select id="findFollowAlarmByAlarmId" resultType="Notification">
        SELECT id
        FROM follow_alarm_log
        WHERE id = #{alarmId}
    </select>

    <delete id="deleteFollowAlarmLog">
        DELETE FROM follow_alarm_log
        WHERE id = #{alarmId}
    </delete>

    <delete id="deleteWholeAlarmLog">
        INSERT INTO whole_alarm_delete (alarm_id, user_id)
        VALUES (#{alarmId}, #{userId})
    </delete>
</mapper>