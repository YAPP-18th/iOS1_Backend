<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.yapp.ios1.mapper.BucketMapper">

    <select id="findByBucketId" resultType="BucketDto">
        SELECT id,
               bucket_name     as bucketName,
               bucket_content  as content,
               created_date    as createdDate,
               end_date        as endDate,
               bucket_state    as bucketState,
               category_id     as categoryId
        FROM bucket
        WHERE id = #{bucketId} AND user_id = #{userId}
    </select>

    <select id="findByBucketStateAndCategory" resultType="BucketDto">
        SELECT id,
               bucket_name   as bucketName,
               created_date  as createdDate,
               end_date      as endDate,
               bucket_state  as bucketState,
               category_id   as categoryId,
               bookmark      as isBookmark,
               fin           as isFin
        FROM bucket
        WHERE user_id = #{userId}
        <choose>
            <when test="bucketState neq 1">
                AND bucket_state = #{bucketState}
            </when>
        </choose>
        <choose>
            <when test="category neq 1">
                AND category_id = #{category}
            </when>
        </choose>
        <choose>
            <when test="sort eq 1">
                ORDER BY fin DESC, id ASC
            </when>
            <otherwise>
                ORDER BY fin DESC, bucket_name ASC
            </otherwise>
        </choose>
    </select>

    <select id="findByUserId" resultType="BucketDto">
        SELECT b.id, b.bucket_name as bucketName,
               b.created_date as createdDate,
               b.end_date as endDate,
               b.bucket_state as bucketState,
               c.category_name as categoryName
        FROM bucket b JOIN category c
                           ON b.category_id = c.id
        WHERE b.user_id = #{userId}
    </select>

    <select id="findByCategoryId" resultType="int">
        SELECT count(*) FROM category WHERE id = #{category};
    </select>

    <insert id="registerBucket" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO bucket (bucket_name, bucket_content, end_date, bucket_state, user_id, category_id)
        VALUES(#{bucketName}, #{content}, #{endDate}, #{bucketState}, #{userId}, #{categoryId});
    </insert>

    <update id="updateBucket">
        UPDATE bucket
        SET bucket_name = #{bucketName},
            bucket_content = #{content},
            end_date = #{endDate},
            bucket_state = #{bucketState},
            category_id = #{categoryId}
        WHERE id = #{id};
    </update>

    <insert id="saveBucketImageUrlList" parameterType="java.util.ArrayList">
        <if test="imageUrlList.size != 0">
            INSERT INTO image (bucket_id, image_url)
            VALUES
            <foreach collection="imageUrlList" item="item" separator=",">
                (#{bucketId}, #{item})
            </foreach>
        </if>
    </insert>

    <select id="findByTagName" resultType="TagDto">
        SELECT *
        FROM tag
        WHERE tag_name = #{tagName};
    </select>

    <insert id="saveBucketIdAndTagId" parameterType="java.util.ArrayList">
        INSERT INTO bucket_tag (bucket_id, tag_id)
        <foreach collection="tagList" item="item" separator="UNION ALL">
            SELECT #{bucketId}, (SELECT id tag_id
            FROM tag
            WHERE tag_name = #{item})
        </foreach>
    </insert>

    <insert id="saveTagList" parameterType="java.util.ArrayList">
        INSERT INTO tag (tag_name)
        VALUES
        <foreach collection="tagList" item="item" separator=",">
            (#{item})
        </foreach>
        ON DUPLICATE KEY
        UPDATE
        tag_name = VALUES (tag_name)
    </insert>

    <select id="findBookmarkListByUserId" resultType="BookmarkDto">
        SELECT id,
               bucket_name as bucketName,
               category_id as categoryId,
               end_date as endDate
        FROM bucket
        WHERE user_id = #{userId} AND bookmark = true
        ORDER BY end_date DESC;
    </select>

    <select id="getBucketCountByUserId" resultType="int">
        SELECT count(*)
        FROM bucket
        WHERE user_id = #{userId};
    </select>

    <delete id="deleteTagListByBucketId">
        DELETE FROM bucket_tag WHERE bucket_id = #{bucketId};
    </delete>

    <delete id="deleteImageListByBucketId">
        DELETE FROM image WHERE bucket_id = #{bucketId};
    </delete>

    <insert id="saveBucketLogList">
        INSERT INTO bucket_log (bucket_id, update_type, content)
        VALUES
        <foreach collection="bucketLogList" item="item" separator=",">
            (#{item.bucketId}, #{item.updateType}, #{item.content})
        </foreach>
    </insert>

    <insert id="saveBucketNameLog">
        INSERT INTO bucket_log (bucket_id, update_type, content)
        SELECT id, 1, bucket_name
        FROM bucket WHERE id = #{bucketId};
    </insert>

    <insert id="saveBucketEndDateLog">
        INSERT INTO bucket_log (bucket_id, update_type, content)
        SELECT id, 0, end_date
        FROM bucket WHERE id = #{bucketId};
    </insert>

    <update id="completeBucket">
        UPDATE bucket
        SET
            bucket_state = 4
        WHERE id = #{bucketId} AND user_id = #{userId};
    </update>

    <select id="findUserIdByBucketId" resultType="BucketCheckDto">
        SELECT id, user_id AS userId
        FROM bucket
        WHERE id = #{bucketId};
    </select>

    <update id="setBookmark">
        UPDATE bucket
        SET
            bookmark = #{isBookmark}
        WHERE id = #{bucketId};
    </update>

    <select id="findByBucketTagByBucketId" resultType="TagDto">
        SELECT t.tag_name as tagName
        FROM bucket_tag bt
            JOIN tag t
                ON t.id = bt.tag_id
        WHERE bt.bucket_id = #{bucketId}
    </select>

    <select id="findByBucketImageByBucketId" resultType="ImagesDto">
        SELECT i.image_url as imageUrl
        FROM image i
            JOIN bucket b
                ON i.bucket_id = b.id
        WHERE b.id = #{bucketId} AND b.user_id = #{userId}
    </select>

    <select id="findByBucketTimelineByBucketId" resultType="BucketTimelineDto">
        SELECT bl.content,
               bl.modified_date as modifiedDate
        FROM bucket b
            JOIN bucket_log bl
                ON b.id = bl.bucket_id
        where b.id = #{bucketId} AND b.user_id = #{userId}
        ORDER BY bl.modified_date DESC
    </select>
</mapper>